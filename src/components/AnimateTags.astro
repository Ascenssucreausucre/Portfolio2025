---
/**
 * <AnimateTags slugs={["react","nodejs","tailwind"]} size={20} />
 * Affiche une liste de <TechTag> et applique l’effet « hover » via GSAP
 * sur tous les tags avec un stagger.
 */
import TechTag from "./TechTag.astro";
import { uid } from "uid";
interface Props {
  slugs: string[];
  size?: number;
}
const { slugs, size = 24 } = Astro.props as Props;
const cid = `tags-${uid(6)}`; // container id unique à chaque instance
---

<div id={cid} class="tags-container">
  {slugs.map((slug) => <TechTag slug={slug} size={size} />)}
</div>

<script>
  import { gsap } from "gsap";

  const container = document.getElementById("{cid}");
  if (container) {
    const tags = container.querySelectorAll(".tech-tag");

    const overTL = gsap.timeline({ paused: true });
    const outTL = gsap.timeline({ paused: true });

    // Effet équivalent au :hover CSS
    overTL.to(tags, {
      backgroundColor: "rgb(41, 18, 18)",
      color: (i, el) => getComputedStyle(el).getPropertyValue("--glow"),
      outlineColor: (i, el) => getComputedStyle(el).getPropertyValue("--glow"),
      filter: (i, el) =>
        el.classList.contains("invert")
          ? `invert(1) drop-shadow(0 0 4px ${getComputedStyle(el).getPropertyValue("--glow")})`
          : `drop-shadow(0 0 4px ${getComputedStyle(el).getPropertyValue("--glow")})`,
      duration: 0.5,
      ease: "power2.out",
      stagger: 0.05,
    });

    // Retour à l’état initial
    outTL.to(tags, {
      backgroundColor: "#f5f5f5",
      color: "black",
      outlineColor: "transparent",
      filter: (i, el) =>
        el.classList.contains("invert") ? "invert(0)" : "none",
      duration: 0.5,
      ease: "power2.out",
      stagger: 0.05,
    });

    container.addEventListener("mouseenter", () => {
      outTL.pause(0);
      overTL.restart();
    });

    container.addEventListener("mouseleave", () => {
      overTL.pause(0);
      outTL.restart();
    });
  }
</script>

<style>
  .tags-container {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-block: 0.5rem;
  }
</style>
